version: '3.8'
services:

  application-patient:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    container_name: patient-app
    depends_on:
      db-patient:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - DB_URL=jdbc:postgresql://db-patient:5432/patient
      - DB_USER=postgres
      - DB_PASS=admin
    volumes:
      - ./target:/app
    command: java -jar /app/patient-service-docker.jar

  db-patient:
    container_name: patient-db
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: patient
    ports:
      - "15432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 5s
      retries: 3

  application-appointment:
    build:
      context: ./patient-appointments
      dockerfile: Dockerfile
    container_name: appointments-app
    depends_on:
      db-appointment:
        condition: service_healthy
    ports:
      - "9090:9090"
    environment:
      - DB_URL=jdbc:postgresql://db-appointment:5432/appointment
      - DB_USER=postgres
      - DB_PASS=admin
    volumes:
      - ./target:/app
    command: java -jar /app/patient-service-docker.jar

  db-appointment:
    container_name: appointment-db
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: appointment
    ports:
      - "15433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 5s
      retries: 3

  pgadmin:
      container_name: patient-pgadmin
      image: dpage/pgadmin4:latest
      restart: always
      environment:
        - PGADMIN_DEFAULT_EMAIL=admin@admin.com
        - PGADMIN_DEFAULT_PASSWORD=admin
      ports:
        - "5050:80"
      depends_on:
        - db-patient
        - db-appointment